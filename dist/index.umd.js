!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).store={})}(this,(function(e){"use strict";const t=e=>"function"==typeof e,r=(e,r="")=>{if(!t(e))throw new TypeError(`${r} Expecting function arg`.trim())},n=e=>t(e.subscribe),s=(e,n=null)=>{const s=e=>t(null==n?void 0:n.persist)&&n.persist(e);let o=(()=>{const e=new Map,t=t=>(e.has(t)||e.set(t,new Set),e.get(t)),r=(e,r)=>{if(!e)throw new TypeError("Expecting valid event name.");if("function"!=typeof r)throw new TypeError("Expecting valid callback function.");return t(e).add(r),()=>t(e).delete(r)};return{publish:(e,r)=>{t(e).forEach((e=>e(r)))},subscribe:r,subscribeOnce:(e,t)=>{const n=r(e,(e=>{t(e),n()}));return n},unsubscribe:(e,r)=>{t(e).delete(r)},unsubscribeAll:t=>e.delete(t)}})(),i=e;s(i);const c=()=>i,u=e=>{i!==e&&(i=e,s(i),o.publish("change",i))};return{set:u,get:c,update:e=>{r(e,"[update]"),u(e(c()))},subscribe:e=>(r(e,"[subscribe]"),e(i),o.subscribe("change",e))}},o=(e,t="session")=>{const r="session"===t?null===window||void 0===window?void 0:window.sessionStorage:null===window||void 0===window?void 0:window.localStorage;return{remove:()=>null==r?void 0:r.removeItem(e),set:t=>{try{null==r||r.setItem(e,JSON.stringify(t))}catch(e){console.error(e)}},get:()=>{try{return JSON.parse(null==r?void 0:r.getItem(e))}catch(e){}}}};e.createDerivedStore=(e,o,i=null)=>{const c=e=>t(null==i?void 0:i.persist)&&i.persist(e),u=s(null==i?void 0:i.initialValue),l=[];if(e.forEach((e=>{if(!n(e))throw new TypeError("Expecting array of StoreLike objects");e.subscribe((e=>l.push(e)))()})),!t(o))throw new TypeError("Expecting second argument to be the derivative function");if(!o.length||o.length>2)throw new TypeError("Expecting the derivative function to have exactly 1 or 2 arguments");let a=0,d=[];const p=t=>{r(t,"[derived.subscribe]"),a++||e.forEach(((e,t)=>{d.push(e.subscribe((e=>{l[t]=e,1===o.length?(u.set(o(l)),c(u.get())):o(l,(e=>{u.set(e),c(u.get())}))})))}));const n=u.subscribe(t);return()=>{--a||(d.forEach((e=>e())),d=[]),n()}};return{get:()=>{let e;return p((t=>e=t))(),e},subscribe:p}},e.createStoragePersistor=o,e.createStorageStore=(e,t="session",r)=>{["local","session"].includes(t)||(console.warn(`Ignoring invalid storageType '${t}', using 'session' instead.`),t="session");const n=o(e,t);return s(n.get()||r,{persist:n.set})},e.createStore=s,e.isStoreLike=n}));
