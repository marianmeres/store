const e=e=>"function"==typeof e,t=(t,r="")=>{if(!e(t))throw new TypeError(`${r} Expecting function arg`.trim())},r=t=>e(t.subscribe),s=(r,s=null)=>{const n=t=>e(s?.persist)&&s.persist(t);let i=(()=>{const e=new Map,t=t=>(e.has(t)||e.set(t,new Set),e.get(t)),r=(e,r)=>{if(!e)throw new TypeError("Expecting valid event name.");if("function"!=typeof r)throw new TypeError("Expecting valid callback function.");return t(e).add(r),()=>t(e).delete(r)};return{publish:(e,r)=>{t(e).forEach((e=>e(r)))},subscribe:r,subscribeOnce:(e,t)=>{const s=r(e,(e=>{t(e),s()}));return s},unsubscribe:(e,r)=>{t(e).delete(r)},unsubscribeAll:t=>e.delete(t)}})(),o=r;n(o);const c=()=>o,u=e=>{o!==e&&(o=e,n(o),i.publish("change",o))};return{set:u,get:c,update:e=>{t(e,"[update]"),u(e(c()))},subscribe:e=>(t(e,"[subscribe]"),e(o),i.subscribe("change",e))}},n=(n,i,o=null)=>{const c=t=>e(o?.persist)&&o.persist(t),u=s(o?.initialValue),a=[];if(n.forEach((e=>{if(!r(e))throw new TypeError("Expecting array of StoreLike objects");e.subscribe((e=>a.push(e)))()})),!e(i))throw new TypeError("Expecting second argument to be the derivative function");if(!i.length||i.length>2)throw new TypeError("Expecting the derivative function to have exactly 1 or 2 arguments");let l=0,b=[];const g=e=>{t(e,"[derived.subscribe]"),l++||n.forEach(((e,t)=>{b.push(e.subscribe((e=>{a[t]=e,1===i.length?(u.set(i(a)),c(u.get())):i(a,(e=>{u.set(e),c(u.get())}))})))}));const r=u.subscribe(e);return()=>{--l||(b.forEach((e=>e())),b=[]),r()}};return{get:()=>{let e;return g((t=>e=t))(),e},subscribe:g}},i=(e,t="session")=>{const r="session"===t?window?.sessionStorage:window?.localStorage;return{remove:()=>r?.removeItem(e),set:t=>{try{r?.setItem(e,JSON.stringify(t))}catch(e){console.error(e)}},get:()=>{try{return JSON.parse(r?.getItem(e))}catch(e){}}}},o=(e,t="session",r)=>{["local","session"].includes(t)||(console.warn(`Ignoring invalid storageType '${t}', using 'session' instead.`),t="session");const n=i(e,t);return s(n.get()||r,{persist:n.set})};export{n as createDerivedStore,i as createStoragePersistor,o as createStorageStore,s as createStore,r as isStoreLike};
